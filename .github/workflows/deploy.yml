name: Flask App CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Get short commit SHA
      - name: Set commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build Docker image with SHA tag
      - name: Build Docker image
        run: |
          docker build -t ashwanth01/ashapp:${{ env.COMMIT_SHA }} ./backend

      # 5. Push Docker image
      - name: Push Docker image
        run: |
          docker push ashwanth01/ashapp:${{ env.COMMIT_SHA }}

      # 6. Update Kubernetes deployment with new image
      - name: Set Kubernetes image
        run: |
          kubectl set image deployment/backend-deployment backend=ashwanth01/ashapp:${{ env.COMMIT_SHA }}

      # 7. Apply Service (if needed)
      - name: Apply Service
        run: |
          kubectl apply -f ./backend/k8s/backend-service.yaml

      # 8. Wait for pod to be ready
      - name: Wait for pod ready
        run: |
          kubectl rollout status deployment/backend-deployment --timeout=120s

      # 9. Show pods and services
      - name: Show Kubernetes status
        run: |
          kubectl get pods
          kubectl get svc

      # 10. Print access URL
      - name: Print app URL
        run: |
          NODE_PORT=$(kubectl get svc backend-service -o jsonpath='{.spec.ports[0].nodePort}')
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          echo "Flask app is running at: http://$NODE_IP:$NODE_PORT"

